{"version":3,"sources":["types.js","containers/home/index.js","actions/index.js","App.js","reportWebVitals.js","reducers/countReducers.js","reducers/todoReducers.js","store/index.js","index.js"],"names":["ADD_COUNT","REDUCE_COUNT","ADD_TO_DO","REMOVE_TO_DO","Home","this","props","addSubmit","reduceSubmit","inputVal","_inputElement","value","data","todo","keyA","Date","now","toDoAdd","para","removeTaskList","style","width","margin","textAlign","countData","marginRight","height","onClick","addCount","reduceCount","type","ref","a","ToDoSubmit","display","flexDirection","alignItems","map","list","marginTop","padding","borderRadius","border","backgroundColor","removeTask","React","Component","mapDispatchToProps","num","payload","connect","state","count","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","countReducer","action","toDoReducer","filter","ele","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.1c68cbde.chunk.js","sourcesContent":["export const ADD_COUNT = 'ADD_COUNT';\r\nexport const REDUCE_COUNT = 'REDUCE_COUNT';\r\nexport const ADD_TO_DO = 'ADD_TO_DO';;\r\nexport const REMOVE_TO_DO = 'REMOVE_TO_DO'","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addSubmit} from '../../actions/index';\r\nimport {reduceSubmit} from '../../actions/index';\r\nimport {toDoAdd} from '../../actions/index';\r\n// import ListItem from '../../components/itemlist';\r\nimport { removeTaskList } from '../../actions/index';\r\n\r\nclass Home extends React.Component{\r\n    \r\n    addCount(){\r\n        this.props.addSubmit(2);\r\n    }\r\n\r\n    reduceCount(){\r\n        this.props.reduceSubmit(1);\r\n    }\r\n\r\n    ToDoSubmit(){\r\n        const inputVal = this._inputElement.value;\r\n        if (inputVal !== ''){\r\n            const data ={\r\n                todo: inputVal,\r\n                keyA: Date.now()\r\n            }\r\n            this.props.toDoAdd(data);\r\n        }\r\n    }\r\n\r\n    removeTask(para){\r\n        this.props.removeTaskList(para);\r\n        // this.props connect redux\r\n        // console.log(para);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width:'80vw', margin:'0 auto', textAlign:'center'}}>\r\n                {/* <h1>This is my home</h1> */}\r\n                <h1>Count: {this.props.countData}</h1>\r\n                <div>\r\n                    <button style={{marginRight:'20px', height: '50px', width: '80px'}} onClick = {() => this.addCount()}>Add</button>\r\n                    <button style={{height: '50px', width: '80px'}} onClick = {() => this.reduceCount()}>Reduce</button>\r\n                </div>\r\n                <input type='text' ref={(a)=> this._inputElement = a} style = {{marginRight:'20px'}}></input>\r\n                <button onClick = {() => this.ToDoSubmit()}>submit</button>\r\n                <div style={{display:'flex', flexDirection:'column', alignItems:'center'}}>           \r\n                    {\r\n                        this.props.todo.map((list) =>(\r\n                            <div style={{width: '50vw',marginTop:'20px', padding:\"10px 15px\", borderRadius:'15px', border:'solid black 1.5px', backgroundColor:'lightblue'}}>\r\n                                <p>{list.todo}</p>\r\n                                {/* <p>{list.keyA}</p> */}\r\n                                <button onClick = {() => this.removeTask(list.keyA)}>Remove the task</button>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countData: state.count,\r\n    todo: state.todo,\r\n    // props: state\r\n});\r\nconst mapDispatchToProps = {\r\n    addSubmit: addSubmit,\r\n    reduceSubmit: reduceSubmit,\r\n    toDoAdd: toDoAdd,\r\n    removeTaskList: removeTaskList,\r\n    // this.props sama dengan kanan\r\n    // props : action page\r\n};\r\n\r\n// \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import * as type from '../types';\r\n\r\nexport const addSubmit = (num) => {\r\n    return {\r\n        type: type.ADD_COUNT,\r\n        payload: num,\r\n    }\r\n}\r\n\r\nexport const reduceSubmit = (num) => {\r\n    return {\r\n        type: type.REDUCE_COUNT,\r\n        payload: num,\r\n    }\r\n}\r\n\r\nexport const toDoAdd = (data) => {\r\n    return {\r\n        type: type.ADD_TO_DO,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const removeTaskList = (data) => {\r\n    return {\r\n        type: type.REMOVE_TO_DO,\r\n        payload: data\r\n    }\r\n} ","// import logo from './logo.svg';\nimport './App.css';\nimport Home from './containers/home/index';\n\nfunction App() {\n  return (\n    <Home />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as type from '../types';\r\n\r\nconst countReducer = (state=50, action) => {\r\n    switch(action.type){\r\n        case type.ADD_COUNT:\r\n            return state += action.payload;\r\n        case type.REDUCE_COUNT:\r\n            return state -= action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default countReducer;\r\n","import * as type from '../types';\r\n\r\n// const defaultState = [];\r\n\r\nconst toDoReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case type.ADD_TO_DO:\r\n            // return state.concat(action.payload);\r\n            return [...state, action.payload]\r\n        case type.REMOVE_TO_DO:\r\n            return [...state].filter(ele => ele.keyA !== action.payload)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default toDoReducer;\r\n\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport countReducer from '../reducers/countReducers'\r\nimport toDoReducer from \"../reducers/todoReducers\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        count: countReducer,\r\n        todo: toDoReducer,\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// for redux\nimport configureStore from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {configureStore}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}